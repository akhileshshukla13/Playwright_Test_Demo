{"version":3,"names":["defineConfig","devices","require","module","exports","testDir","fullyParallel","forbidOnly","process","env","CI","retries","workers","undefined","reporter","use","trace","projects","name"],"sources":["playwright.config.js"],"sourcesContent":["// @ts-check\r\nconst { defineConfig, devices } = require('@playwright/test');\r\n\r\n/**\r\n * Read environment variables from file.\r\n * https://github.com/motdotla/dotenv\r\n */\r\n// require('dotenv').config();\r\n\r\n/**\r\n * @see https://playwright.dev/docs/test-configuration\r\n */\r\nmodule.exports = defineConfig({\r\n  testDir: './tests',\r\n  /* Run tests in files in parallel */\r\n  fullyParallel: true,\r\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\r\n  forbidOnly: !!process.env.CI,\r\n  /* Retry on CI only */\r\n  retries: process.env.CI ? 2 : 0,\r\n  /* Opt out of parallel tests on CI. */\r\n  workers: process.env.CI ? 1 : undefined,\r\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\r\n  reporter: [[\"line\"], [\"allure-playwright\"]],\r\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\r\n  use: {\r\n    /* Base URL to use in actions like `await page.goto('/')`. */\r\n    // baseURL: 'http://127.0.0.1:3000',\r\n\r\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\r\n    trace: 'on-first-retry',\r\n  },\r\n\r\n  /* Configure projects for major browsers */\r\n  projects: [\r\n    {\r\n      name: 'chromium',\r\n      use: { ...devices['Desktop Chrome'] },\r\n    },\r\n    // {\r\n    //   name: \"firefox\",\r\n    //   use: { ...devices[\"Desktop Firefox\"] },\r\n    // }\r\n\r\n    // {\r\n    //   name: 'webkit',\r\n    //   use: { ...devices['Desktop Safari'] },\r\n    // },\r\n\r\n    /* Test against mobile viewports. */\r\n    // {\r\n    //   name: 'Mobile Chrome',\r\n    //   use: { ...devices['Pixel 5'] },\r\n    // },\r\n    // {\r\n    //   name: 'Mobile Safari',\r\n    //   use: { ...devices['iPhone 12'] },\r\n    // },\r\n\r\n    /* Test against branded browsers. */\r\n    // {\r\n    //   name: 'Microsoft Edge',\r\n    //   use: { ...devices['Desktop Edge'], channel: 'msedge' },\r\n    // },\r\n    // {\r\n    //   name: 'Google Chrome',\r\n    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' },\r\n    // },\r\n  ],\r\n\r\n  /* Run your local dev server before starting the tests */\r\n  // webServer: {\r\n  //   command: 'npm run start',\r\n  //   url: 'http://127.0.0.1:3000',\r\n  //   reuseExistingServer: !process.env.CI,\r\n  // },\r\n});\r\n\r\n"],"mappings":";;AAAA;AACA,MAAM;EAAEA,YAAY;EAAEC;AAAQ,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGJ,YAAY,CAAC;EAC5BK,OAAO,EAAE,SAAS;EAClB;EACAC,aAAa,EAAE,IAAI;EACnB;EACAC,UAAU,EAAE,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,EAAE;EAC5B;EACAC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/B;EACAE,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAGG,SAAS;EACvC;EACAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;EAC3C;EACAC,GAAG,EAAE;IACH;IACA;;IAEA;IACAC,KAAK,EAAE;EACT,CAAC;EAED;EACAC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UAAU;IAChBH,GAAG,EAAE;MAAE,GAAGd,OAAO,CAAC,gBAAgB;IAAE;EACtC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;;EAGF;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC"}